-- INNER JOIN [USING QUERY 7]
-- ENLIST ALL THE EMPLOYEES ID'S, NAMES ALONG WITH THE PROJECT ALLOCATED TO THEM.
SELECT E.id, E.f_name, E.l_name, p.id, p.name
FROM EMPLOYEE AS E INNER JOIN PROJECT AS P
ON E.id = P.emp_id;

SELECT E.id, E.f_name, E.l_name, p.id, p.name
FROM EMPLOYEE AS E,PROJECT AS P
WHERE E.id = P.emp_id;

-- FETCH OUT ALL THE EMPLOYEE ID'S AND THEIR CONTACT DETAILS WHO HAVE BEEN WORKING
-- FROM guskara WITH THE CLIENTS NAME WORKING IN landan
SELECT E.ID, E.f_name, E.l_name, E.email_id, E.phone_no, E.CITY,C.CITY
FROM EMPLOYEE AS E INNER JOIN CLIENT AS C
ON E.ID = C.emp_id
WHERE E.CITY='guskara' AND C.CITY='landan';

-- LEFT JOIN
-- FETCH OUT EACH PROJECT ALLOCATED TO EACH EMPLOYEE
SELECT * 
FROM EMPLOYEE AS E LEFT JOIN PROJECT AS P
ON E.id = P.emp_id;

-- RIGHT JOIN
-- LIST OUT ALL THE PROJECTS ALONG WITH THE EMPLOYEES NAME AND THERE RESPECTIVE ALLOCATED EMAIL ID
SELECT P.id, P.name, E.f_name, E.l_name, E.email_id
FROM EMPLOYEE AS E RIGHT JOIN PROJECT AS P
ON E.id = P.emp_id;

-- CROSS JOIN
-- LIST OUT ALL THE COMBINATIONS POSSIBLE FOR THE EMPLOYEES NAME AND PROJECTS THAT CAN EXIST
SELECT P.id, P.name, E.f_name, E.l_name 
FROM EMPLOYEE AS E CROSS JOIN PROJECT AS P;

-- CAN WE JOIN WITHOUT USING JOIN KEYWORD
-- YES
-- SYNTAX: SELECT * FROM LEFT_TABLE, RIGHT_TABLE WHERE LEFT_TABLE.ID = RIGHT_TABLE.ID;
-- USING JOIN KEYWORD
SELECT E.id, E.f_name, E.l_name, p.id, p.name
FROM EMPLOYEE AS E INNER JOIN PROJECT AS P
ON E.id = P.emp_id;
-- WITHOUT USING JOIN KEYWORD
SELECT E.id, E.f_name, E.l_name, p.id, p.name
FROM EMPLOYEE AS E,PROJECT AS P
WHERE E.id = P.emp_id;

